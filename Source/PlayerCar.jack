class PlayerCar 
{
   field int x, y;
   field int xSize, ySize;
   
   constructor PlayerCar new(int Ax, int Ay)
   {
      let x = Ax;
      let y = Ay; 
      
      let xSize = 48;
      let ySize = 32;

      return this;
   }

   method int GetX()
   {
      return 16 * x;
   }

   method int GetY()
   {
      return y;
   }

   method void dispose()
   {
      do Memory.deAlloc(this);

      return;
   }

   method void draw()
   {
      var int location;
      var int memAddress; 

      let location = 32*y+x; 
      let memAddress = 16384+location;

      do Memory.poke(memAddress, -512);
      do Memory.poke(memAddress +32, -64);
      do Memory.poke(memAddress +64, -16);
      do Memory.poke(memAddress +96, -196);
      do Memory.poke(memAddress +128, 398);
      do Memory.poke(memAddress +160, 198);
      do Memory.poke(memAddress +192, -26521);
      do Memory.poke(memAddress +224, -29641);
      do Memory.poke(memAddress +256, -14825);
      do Memory.poke(memAddress +288, -16369);
      do Memory.poke(memAddress +320, -16369);
      do Memory.poke(memAddress +352, -16369);
      do Memory.poke(memAddress +384, -16369);
      do Memory.poke(memAddress +416, -16369);
      do Memory.poke(memAddress +448, -16369);
      do Memory.poke(memAddress +480, -16373);
      do Memory.poke(memAddress +512, -16373);
      do Memory.poke(memAddress +544, -16369);
      do Memory.poke(memAddress +576, -16369);
      do Memory.poke(memAddress +608, -16369);
      do Memory.poke(memAddress +640, -16369);
      do Memory.poke(memAddress +672, -16369);
      do Memory.poke(memAddress +704, -16369);
      do Memory.poke(memAddress +736, -14825);
      do Memory.poke(memAddress +768, -29641);
      do Memory.poke(memAddress +800, -26521);
      do Memory.poke(memAddress +832, 198);
      do Memory.poke(memAddress +864, 398);
      do Memory.poke(memAddress +896, -196);
      do Memory.poke(memAddress +928, -16);
      do Memory.poke(memAddress +960, -64);
      do Memory.poke(memAddress +992, -512);
      do Memory.poke(memAddress +1, 7);
      do Memory.poke(memAddress +33, -1);
      do Memory.poke(memAddress +65, -1);
      do Memory.poke(memAddress +97, -1);
      do Memory.poke(memAddress +129, -16369);
      do Memory.poke(memAddress +161, -32717);
      do Memory.poke(memAddress +193, -63);
      do Memory.poke(memAddress +225, 21761);
      do Memory.poke(memAddress +257, -21760);
      do Memory.poke(memAddress +289, 21760);
      do Memory.poke(memAddress +321, -21760);
      do Memory.poke(memAddress +353, 21760);
      do Memory.poke(memAddress +385, -21760);
      do Memory.poke(memAddress +417, 21760);
      do Memory.poke(memAddress +449, -21760);
      do Memory.poke(memAddress +481, 21760);
      do Memory.poke(memAddress +513, -21760);
      do Memory.poke(memAddress +545, 21760);
      do Memory.poke(memAddress +577, -21760);
      do Memory.poke(memAddress +609, 21760);
      do Memory.poke(memAddress +641, -21760);
      do Memory.poke(memAddress +673, 21760);
      do Memory.poke(memAddress +705, -21760);
      do Memory.poke(memAddress +737, 21760);
      do Memory.poke(memAddress +769, -21759);
      do Memory.poke(memAddress +801, -63);
      do Memory.poke(memAddress +833, -32717);
      do Memory.poke(memAddress +865, -16369);
      do Memory.poke(memAddress +897, -1);
      do Memory.poke(memAddress +929, -1);
      do Memory.poke(memAddress +961, -1);
      do Memory.poke(memAddress +993, 7);
      do Memory.poke(memAddress +2, 2046);
      do Memory.poke(memAddress +34, 8191);
      do Memory.poke(memAddress +66, 16383);
      do Memory.poke(memAddress +98, 32767);
      do Memory.poke(memAddress +130, 32641);
      do Memory.poke(memAddress +162, 32323);
      do Memory.poke(memAddress +194, -961);
      do Memory.poke(memAddress +226, -1995);
      do Memory.poke(memAddress +258, -3990);
      do Memory.poke(memAddress +290, -939);
      do Memory.poke(memAddress +322, -7254);
      do Memory.poke(memAddress +354, -7979);
      do Memory.poke(memAddress +386, -8022);
      do Memory.poke(memAddress +418, -7979);
      do Memory.poke(memAddress +450, -8022);
      do Memory.poke(memAddress +482, -7979);
      do Memory.poke(memAddress +514, -8022);
      do Memory.poke(memAddress +546, -7979);
      do Memory.poke(memAddress +578, -8022);
      do Memory.poke(memAddress +610, -7979);
      do Memory.poke(memAddress +642, -8022);
      do Memory.poke(memAddress +674, -7211);
      do Memory.poke(memAddress +706, -918);
      do Memory.poke(memAddress +738, -4011);
      do Memory.poke(memAddress +770, -2006);
      do Memory.poke(memAddress +802, -961);
      do Memory.poke(memAddress +834, 32323);
      do Memory.poke(memAddress +866, 32641);
      do Memory.poke(memAddress +898, 32767);
      do Memory.poke(memAddress +930, 16383);
      do Memory.poke(memAddress +962, 8191);
      do Memory.poke(memAddress +994, 2044);

      return;
    }

   method void move(int dx, int dy)
   {
      if ((1 < (x + dx)) & ((x + dx + xSize) < 511))
      {
         let x = x + dx;
      }

      if ((0 < (y+dy)) & ((y + dy + ySize) < 255))
      {
         let y = y + dy;
      }

      return;
   }
}
